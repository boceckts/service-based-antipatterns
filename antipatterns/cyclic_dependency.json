{
  "antiPatterns": [
    {
      "name": "Cyclic Dependency",
      "aliases": [
        ""
      ],
      "description": "A cyclic chain of calls between services exists.",
      "context": "",
      "detection": "Services depend on each other in a cyclic interaction pattern, e.g. A calls B, B calls C, and C calls back A.",
      "consequences": "Services involved in a cyclic dependency can be harder to maintain or reuse.",
      "cause": "",
      "solution": "Resolve the cycles by e.g. relocating functionality (merging) or use an intermediary like the API Gateway pattern.",
      "example": "A depends on B, B on C and C on A",
      "sources": [
        "@article{taibi2018definition, title={On the Definition of Microservice Bad Smells}, author={Taibi, Davide and Lenarduzzi, Valentina}, journal={IEEE software}, volume={35}, number={3}, pages={56--62}, year={2018}, publisher={IEEE}, doi={10.1109/ms.2018.2141031}}"
      ],
      "tags": [
        "soa",
        "microservices",
        "architecture",
        "dependency"
      ],
      "relatedItems": [
        {
          "relation": "relates",
          "name": "Chatty Service"
        },
        {
          "relation": "relates",
          "name": "Nanoservices"
        }
      ]
    }
  ]
}
