{
  "antiPatterns": [
    {
      "name": "Silver Bullet",
      "aliases": [
        "Web Services Will Fix Our Problems"
      ],
      "description": "Web services are used to solve a problem on top of an existing architecture, even though they are not really fitting for this problem.",
      "context": "",
      "detection": "The system involves not only web services, but also other architectural paradigms and styles.",
      "consequences": "Using web services for such a problem either causes significant refactoring efforts or an additional maintenance overhead if functionality is just copied. Web services created in this way are also hard to reuse, because they were built for this specific purpose.",
      "cause": "These issues are usually caused by the assumption that web services can fix issues that actually reside in the implementation of the underlying architecture. Another possibility is that high-level technical managers and not architects take these decisions without understanding them.",
      "solution": "An extensive refactoring of the underlying system is needed.",
      "example": "An example is a bloated session with a similarly structured web service endpoint on top of it. This causes tight coupling because the web service is specific to this session.",
      "sources": [
        "@book{dudney2003j2ee, title={J2EE antipatterns}, author={Dudney, Bill and Asbury, Stephen and Krozak, Joseph K and Wittkopf, Kevin}, year={2003}, publisher={John Wiley \\& Sons}}"
      ],
      "tags": [
        "soa",
        "architecture",
        "system"
      ],
      "relatedItems": [
        {
          "relation": "relates",
          "name": "Golden Hammer"
        },
        {
          "relation": "relates",
          "name": "Nothing New"
        }
      ]
    }
  ]
}
